// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Person.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class JQKDog;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum JQKSex

typedef GPB_ENUM(JQKSex) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  JQKSex_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  JQKSex_Male = 0,
  JQKSex_Female = 1,
};

GPBEnumDescriptor *JQKSex_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL JQKSex_IsValidValue(int32_t value);

#pragma mark - Enum JQKLocation

typedef GPB_ENUM(JQKLocation) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  JQKLocation_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  JQKLocation_Asia = 0,
  JQKLocation_Antarctica = 1,
  JQKLocation_Oceania = 2,
  JQKLocation_Europe = 3,
  JQKLocation_Africa = 4,
  JQKLocation_SouthAmerica = 5,
  JQKLocation_NorthAmerica = 6,
};

GPBEnumDescriptor *JQKLocation_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL JQKLocation_IsValidValue(int32_t value);

#pragma mark - JQKPersonRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface JQKPersonRoot : GPBRootObject
@end

#pragma mark - JQKPerson

typedef GPB_ENUM(JQKPerson_FieldNumber) {
  JQKPerson_FieldNumber_Name = 1,
  JQKPerson_FieldNumber_Dog = 2,
  JQKPerson_FieldNumber_Sex = 3,
  JQKPerson_FieldNumber_Loc = 4,
};

@interface JQKPerson : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) JQKDog *dog;
/** Test to see if @c dog has been set. */
@property(nonatomic, readwrite) BOOL hasDog;

@property(nonatomic, readwrite) JQKSex sex;

@property(nonatomic, readwrite) JQKLocation loc;

@end

/**
 * Fetches the raw value of a @c JQKPerson's @c sex property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t JQKPerson_Sex_RawValue(JQKPerson *message);
/**
 * Sets the raw value of an @c JQKPerson's @c sex property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetJQKPerson_Sex_RawValue(JQKPerson *message, int32_t value);

/**
 * Fetches the raw value of a @c JQKPerson's @c loc property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t JQKPerson_Loc_RawValue(JQKPerson *message);
/**
 * Sets the raw value of an @c JQKPerson's @c loc property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetJQKPerson_Loc_RawValue(JQKPerson *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
